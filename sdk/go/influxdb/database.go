// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The database resource allows a database to be created on an InfluxDB server.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-influxdb/blob/master/website/docs/r/database.html.markdown.
type Database struct {
	s *pulumi.ResourceState
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOpt) (*Database, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["retentionPolicies"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["retentionPolicies"] = args.RetentionPolicies
	}
	s, err := ctx.RegisterResource("influxdb:index/database:Database", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Database{s: s}, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DatabaseState, opts ...pulumi.ResourceOpt) (*Database, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["retentionPolicies"] = state.RetentionPolicies
	}
	s, err := ctx.ReadResource("influxdb:index/database:Database", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Database{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Database) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Database) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The name of the retention policy
func (r *Database) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// A list of retention policies for specified database
func (r *Database) RetentionPolicies() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["retentionPolicies"])
}

// Input properties used for looking up and filtering Database resources.
type DatabaseState struct {
	// The name of the retention policy
	Name interface{}
	// A list of retention policies for specified database
	RetentionPolicies interface{}
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// The name of the retention policy
	Name interface{}
	// A list of retention policies for specified database
	RetentionPolicies interface{}
}
